varnishtest "PURGEONE"

server s1 {
	rxreq
	txresp -hdr "version: 0"

	rxreq
	txresp -hdr "version: 1"

	rxreq
	txresp -hdr "version: 2"
} -start

varnish v1 -vcl+backend {
	include "${pwd}/invalidate_os.vcl";

	sub vcl_recv {
		if (req.http.user == "ok") {
			set req.http.invalidate-user-authorized = "true";
		}
		if (req.http.method == "nok") {
			set req.http.invalidate-purge-allow = "false";
		}
		call invalidate;
	}
} -start

varnish v1 -cliok "param.set debug +syncvsl"

client c1 {
	# get an object in the cache
	txreq
	rxresp
	expect resp.status == 200
	expect resp.http.version == "0"

	# check it's cached
	txreq
	rxresp
	expect resp.status == 200
	expect resp.http.version == "0"

	# get another one in
	txreq -url "/foo"
	rxresp
	expect resp.status == 200
	expect resp.http.version == "1"

	# purge it without the ok header
	txreq -method PURGEONE
	rxresp
	expect resp.status == 405
	expect resp.body == "Unauthorized request"

	# try to be clever as sneak the invalidate-user-authorized header in
	txreq -method PURGEONE -hdr "invalidate-user-authorized: true"
	rxresp
	expect resp.status == 405
	expect resp.body == "Unauthorized request"

	# try to purge, but PURGEONE is now forbidden
	txreq -method PURGEONE -hdr "user: ok" -hdr "method: nok"
	rxresp
	expect resp.status == 405
	expect resp.body == "PURGEONE is disabled on this host"

	# purge for good
	txreq -method PURGEONE -hdr "user: ok"
	rxresp
	expect resp.status == 200
	expect resp.body == "Successful purgeone request"

	# get a new version
	txreq
	rxresp
	expect resp.status == 200
	expect resp.http.version == "2"

	# but /foo hasn't changed
	txreq -url "/foo"
	rxresp
	expect resp.status == 200
	expect resp.http.version == "1"
} -run
