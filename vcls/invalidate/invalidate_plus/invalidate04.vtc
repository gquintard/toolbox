varnishtest "PURGETAG"

server s1 {
	rxreq
	txresp -hdr "version: foo_0" -hdr "tags: foo, all"

	rxreq
	txresp -hdr "version: bar_0" -hdr "tags: bar, all"

	rxreq
	txresp -hdr "version: foo_1" -hdr "tags: foo, all"

	rxreq
	txresp -hdr "version: foo_2" -hdr "tags: foo, all"

	rxreq
	txresp -hdr "version: bar_1" -hdr "tags: bar, all"
} -start

varnish v1 -vcl+backend {
import std;
	include "${pwd}/invalidate.vcl";

	sub vcl_recv {
		# trust everyone
		invalidate_opts.set("user-authorized", "true");
		call invalidate;
	}

	sub vcl_backend_response {
		ykey.add_header(beresp.http.tags);
	}
} -start

varnish v1 -cliok "param.set debug +syncvsl"

client c1 {
	txreq -hdr "host: foo.com"
	rxresp
	expect resp.status == 200
	expect resp.http.version == "foo_0"

	txreq -hdr "host: bar.com"
	rxresp
	expect resp.status == 200
	expect resp.http.version == "bar_0"

	# mismatching host, this should have no effect
	txreq -req PURGETAG -hdr "purgetag-list: baz"
	rxresp
	expect resp.status == 200

	txreq -hdr "host: foo.com"
	rxresp
	expect resp.status == 200
	expect resp.http.version == "foo_0"

	txreq -hdr "host: bar.com"
	rxresp
	expect resp.status == 200
	expect resp.http.version == "bar_0"

	# ban foo
	txreq -req PURGETAG -hdr "purgetag-list: foo"
	rxresp
	expect resp.status == 200

	# this one will be new
	txreq -hdr "host: foo.com"
	rxresp
	expect resp.status == 200
	expect resp.http.version == "foo_1"

	# but this one is untouched
	txreq -hdr "host: bar.com"
	rxresp
	expect resp.status == 200
	expect resp.http.version == "bar_0"

	# ban everything
	txreq -req PURGETAG -hdr "purgetag-list: all"
	rxresp
	expect resp.status == 200

	# this one will be new
	txreq -hdr "host: foo.com"
	rxresp
	expect resp.status == 200
	expect resp.http.version == "foo_2"

	# this one too
	txreq -hdr "host: bar.com"
	rxresp
	expect resp.status == 200
	expect resp.http.version == "bar_1"
} -run
